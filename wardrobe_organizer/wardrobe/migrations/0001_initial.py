# Generated by Django 3.2.16 on 2023-05-16 17:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Care',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation', models.CharField(max_length=256, verbose_name='Рекомендация по уходу')),
            ],
            options={
                'verbose_name': 'Рекомендация по уходу',
                'verbose_name_plural': 'Рекомендации по уходу',
                'ordering': ['recommendation'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название вещи')),
                ('need_to_buy', models.BooleanField(blank=True, default=False, null=True, verbose_name='Нужно докупить')),
                ('number_of_uses', models.PositiveSmallIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0, message='Количество использований не может быть меньше 0'), django.core.validators.MaxValueValidator(32766, message='Количество использований не может быть больше 32766')], verbose_name='Количество использований')),
                ('price', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, message='Цена не может быть меньше 0'), django.core.validators.MaxValueValidator(2147483646, message='Цена не может быть больше 2147483646')], verbose_name='Цена')),
                ('season', models.CharField(choices=[('Spring-Autumn', 'Весна-Осень'), ('Summer', 'Лето'), ('Winter', 'Зима'), ('Universal', 'Универсальный')], max_length=256, verbose_name='Сезон')),
                ('note', models.TextField(blank=True, verbose_name='Дополнительные заметки')),
                ('image', models.ImageField(upload_to='items/', verbose_name='Изображение')),
                ('color', models.CharField(max_length=256, verbose_name='Цвет')),
                ('storage_place', models.CharField(blank=True, max_length=256, verbose_name='Место хранения')),
                ('care', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='items', to='wardrobe.care', verbose_name='Рекомендации по уходу')),
            ],
            options={
                'verbose_name': 'Предмет гардероба',
                'verbose_name_plural': 'Предметы гардероба',
                'ordering': ['-number_of_uses'],
                'default_related_name': 'items',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название типа')),
                ('category', models.CharField(choices=[('Top', 'Верх'), ('Bottom', 'Низ'), ('Dress', 'Платье'), ('Outerwear', 'Верхняя одежда'), ('Shoes', 'Обувь'), ('Accessories', 'Аксессуары'), ('Other', 'Другое')], max_length=256, verbose_name='Категория типа')),
            ],
            options={
                'verbose_name': 'Тип',
                'verbose_name_plural': 'Типы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Usage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название области применения')),
            ],
            options={
                'verbose_name': 'Область применения',
                'verbose_name_plural': 'Области применения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Use',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='Дата использования')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='use', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Информация об использовании',
                'verbose_name_plural': 'Информация об использовании',
                'ordering': ['-time'],
                'default_related_name': 'use',
            },
        ),
        migrations.CreateModel(
            name='Outfit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, verbose_name='Название комплекта')),
                ('season', models.CharField(choices=[('Spring-Autumn', 'Весна-Осень'), ('Summer', 'Лето'), ('Winter', 'Зима'), ('Universal', 'Универсальный')], max_length=256, verbose_name='Сезон')),
                ('number_of_uses', models.PositiveSmallIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0, message='Количество использований не может быть меньше 0'), django.core.validators.MaxValueValidator(32766, message='Количество использований не может быть больше 32766')], verbose_name='Количество использований')),
                ('image', models.ImageField(upload_to='outfits/', verbose_name='Изображение')),
                ('note', models.TextField(blank=True, verbose_name='Дополнительные заметки')),
                ('min_temperature', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-50, message='Температура должна быть больше -50 градусов'), django.core.validators.MaxValueValidator(50, message='Температура должна быть меньше 50 градусов')], verbose_name='Минимальная температура использования в градусах')),
                ('max_temperature', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-50, message='Температура должна быть больше -50 градусов'), django.core.validators.MaxValueValidator(50, message='Температура должна быть меньше 50 градусов')], verbose_name='Максимальная температура использования в градусах')),
                ('item', models.ManyToManyField(related_name='outfits', to='wardrobe.Item', verbose_name='Предмет гардероба')),
                ('usage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='outfits', to='wardrobe.usage', verbose_name='Область применения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outfits', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('using_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outfits', to='wardrobe.use', verbose_name='Информация об использовании')),
            ],
            options={
                'verbose_name': 'Комплект',
                'verbose_name_plural': 'Комплекты',
                'ordering': ['-number_of_uses'],
                'default_related_name': 'outfits',
            },
        ),
        migrations.CreateModel(
            name='Laundry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laundry', to='wardrobe.item', verbose_name='В стирке')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laundry', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'В стирке',
                'verbose_name_plural': 'В стирке',
                'ordering': ['-id'],
                'default_related_name': 'laundry',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='wardrobe.type', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='item',
            name='usage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='items', to='wardrobe.usage', verbose_name='Область применения'),
        ),
        migrations.AddField(
            model_name='item',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='Favorit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorits', to='wardrobe.item', verbose_name='В избранном')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorits', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранное',
                'ordering': ['-id'],
                'default_related_name': 'favorits',
            },
        ),
        migrations.CreateModel(
            name='Capsule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, verbose_name='Название капсулы')),
                ('outfit', models.ManyToManyField(related_name='capsules', to='wardrobe.Outfit', verbose_name='Комплект')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capsules', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Капсула',
                'verbose_name_plural': 'Капсулы',
                'ordering': ['id'],
                'default_related_name': 'capsules',
            },
        ),
        migrations.AddConstraint(
            model_name='laundry',
            constraint=models.UniqueConstraint(fields=('user', 'item'), name='unique_laundry'),
        ),
        migrations.AddConstraint(
            model_name='favorit',
            constraint=models.UniqueConstraint(fields=('user', 'item'), name='unique_favorite'),
        ),
    ]
